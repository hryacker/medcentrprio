/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */

main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10.
 */

img {
  border-style: none;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */

button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Misc
   ========================================================================== */

/**
 * Add the correct display in IE 10+.
 */

template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */

[hidden] {
  display: none;
}

@font-face {
  font-family: "swiper-icons";
  src: url("data:application/font-woff;charset=utf-8;base64, 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") format("woff");
  font-weight: 400;
  font-style: normal;
}

:root {
  --swiper-theme-color: #007aff;
}

.swiper {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  /* Fix of Webkit flickering */
  z-index: 1;
}

.swiper-vertical > .swiper-wrapper {
  flex-direction: column;
}

.swiper-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: flex;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
  box-sizing: content-box;
}

.swiper-android .swiper-slide,
.swiper-wrapper {
  -webkit-transform: translate3d(0px, 0, 0);
          transform: translate3d(0px, 0, 0);
}

.swiper-pointer-events {
  touch-action: pan-y;
}

.swiper-pointer-events.swiper-vertical {
  touch-action: pan-x;
}

.swiper-slide {
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  position: relative;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
}

.swiper-slide-invisible-blank {
  visibility: hidden;
}

/* Auto Height */

.swiper-autoheight,
.swiper-autoheight .swiper-slide {
  height: auto;
}

.swiper-autoheight .swiper-wrapper {
  align-items: flex-start;
  transition-property: height, -webkit-transform;
  transition-property: transform, height;
  transition-property: transform, height, -webkit-transform;
}

.swiper-backface-hidden .swiper-slide {
  -webkit-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}

/* 3D Effects */

.swiper-3d,
.swiper-3d.swiper-css-mode .swiper-wrapper {
  -webkit-perspective: 1200px;
          perspective: 1200px;
}

.swiper-3d .swiper-wrapper,
.swiper-3d .swiper-slide,
.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-slide-shadow-bottom,
.swiper-3d .swiper-cube-shadow {
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
}

.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-slide-shadow-bottom {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 10;
}

.swiper-3d .swiper-slide-shadow {
  background: rgba(0, 0, 0, 0.15);
}

.swiper-3d .swiper-slide-shadow-left {
  background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-3d .swiper-slide-shadow-right {
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-3d .swiper-slide-shadow-top {
  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-3d .swiper-slide-shadow-bottom {
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

/* CSS Mode */

.swiper-css-mode > .swiper-wrapper {
  overflow: auto;
  scrollbar-width: none;
  /* For Firefox */
  -ms-overflow-style: none;
  /* For Internet Explorer and Edge */
}

.swiper-css-mode > .swiper-wrapper::-webkit-scrollbar {
  display: none;
}

.swiper-css-mode > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: start start;
}

.swiper-horizontal.swiper-css-mode > .swiper-wrapper {
  -ms-scroll-snap-type: x mandatory;
      scroll-snap-type: x mandatory;
}

.swiper-vertical.swiper-css-mode > .swiper-wrapper {
  -ms-scroll-snap-type: y mandatory;
      scroll-snap-type: y mandatory;
}

.swiper-centered > .swiper-wrapper::before {
  content: "";
  flex-shrink: 0;
  order: 9999;
}

.swiper-centered.swiper-horizontal > .swiper-wrapper > .swiper-slide:first-child {
  -webkit-margin-start: var(--swiper-centered-offset-before);
          margin-inline-start: var(--swiper-centered-offset-before);
}

.swiper-centered.swiper-horizontal > .swiper-wrapper::before {
  height: 100%;
  width: var(--swiper-centered-offset-after);
}

.swiper-centered.swiper-vertical > .swiper-wrapper > .swiper-slide:first-child {
  -webkit-margin-before: var(--swiper-centered-offset-before);
          margin-block-start: var(--swiper-centered-offset-before);
}

.swiper-centered.swiper-vertical > .swiper-wrapper::before {
  width: 100%;
  height: var(--swiper-centered-offset-after);
}

.swiper-centered > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: center center;
}

* {
  box-sizing: border-box;
}

.container {
  max-width: 1140px;
  margin: 0 auto;
  padding-left: 15px;
  padding-right: 15px;
}

.flex {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
}

.col {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
}

button.grid {
  display: block;
  all: unset;
  padding: 20px;
  background: #ccc;
  position: fixed;
  z-index: 9999;
  left: 300px;
  color: white;
}

.debug-grid {
  display: none;
  left: 0;
  top: 0;
  height: 100vh;
  position: fixed;
  width: 100%;
  z-index: 10;
}

.debug-grid > div {
  height: inherit;
  max-width: 1140px;
  margin: 0 auto;
  padding-left: 15px;
  padding-right: 15px;
}

.debug-grid > div > div {
  height: inherit;
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
}

.debug-grid > div > div > div {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 1 - 30px);
  height: inherit;
  outline: 1px solid #ff0;
  background: rgba(0, 0, 0, 0.5);
}

.debug-grid > div.container {
  max-width: 1140px;
  margin: 0 auto;
  padding-left: 15px;
  padding-right: 15px;
}

.debug-grid.active {
  display: block;
}

html {
  font-family: Inter;
  line-height: 1.2;
  -webkit-tap-highlight-color: transparent;
}

header {
  background: linear-gradient(90deg, #FDFBFB 0%, #EBEDEE 100%);
}

ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

a {
  text-decoration: none;
  color: #3F3F3F;
}

a.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

button {
  outline: none;
  padding: 0;
  cursor: pointer;
  line-height: normal;
}

.btn {
  min-height: 50px;
  min-width: 220px;
  border-radius: 50px;
  border: none;
  font-size: 18px;
  cursor: pointer;
  transition: all 0.3s;
  line-height: normal;
}

.btn-fill {
  background: #1E90FF;
  color: #fff;
}

.btn-fill:hover {
  background: #1375F8;
}

.btn-outline {
  background: #fff;
  color: #1E90FF;
  border: 2px solid #1E90FF;
}

.btn-outline:hover {
  background: #1E90FF;
  color: #fff;
}

img {
  max-width: 100%;
  height: auto;
  display: block;
}

h1,
h2,
h3,
h4 {
  color: #1F2F70;
}

h1 {
  font-size: 50px;
}

h2 {
  margin-top: 0;
  margin-bottom: 65px;
  font-size: 45px;
}

h3 {
  margin-top: 0;
  font-size: 40px;
}

.grab-form {
  height: 150px;
  padding: 35px 30px;
  background: #FFFFFF;
  box-shadow: 0px 4px 50px rgba(0, 0, 0, 0.07);
  border-radius: 19px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-family: "Montserrat";
  font-size: 16px;
}

.grab-form > div {
  display: flex;
  align-items: center;
}

.grab-form > div:not(.actions)::before {
  content: "";
  margin-right: 20px;
  width: 45px;
  height: 45px;
}

.grab-form > div:not(.actions)::after {
  content: "";
  margin-left: 25px;
  margin-right: 10px;
  width: 6px;
  height: 78px;
  background: #DAE6F2;
  border-radius: 5px;
}

.grab-form .doctor::before {
  background: url("../img/icon-therapy-min2.svg") center/contain no-repeat;
}

.grab-form .date::before {
  background: url("../img/icon-calendar2-min2.svg") center/contain no-repeat;
}

.grab-form .phone::before {
  background: url("../img/icon-user-min2.svg") center/contain no-repeat;
}

.grab-form .actions {
  display: block;
  padding: 0;
  text-align: right;
}

.grab-form .btn-fill {
  min-width: 200px;
  font-size: 16px;
  margin-left: auto;
}

.grab-form__label::before {
  margin-right: 20px;
}

.grab-form__label select,
.grab-form__label input {
  display: block;
  border: none;
  outline: none;
  font-weight: 500;
  color: #3F3F3F;
  background: none;
  width: 100%;
  cursor: pointer;
}

.grab-form__label input::-webkit-input-placeholder {
  font-weight: 500;
  color: #3F3F3F;
}

.grab-form__label input:-ms-input-placeholder {
  font-weight: 500;
  color: #3F3F3F;
}

.grab-form__label input::placeholder {
  font-weight: 500;
  color: #3F3F3F;
}

.grab-form__label--doc select {
  width: 200px;
}

.grab-form__label--date {
  position: relative;
}

.grab-form__label--date input {
  width: 165px;
}

.grab-form__label--phone input {
  width: 130px;
  border-bottom: 1px solid transparent;
  transition: border-bottom 0.3s;
}

.grab-form__label--phone input:focus {
  border-bottom-color: #3F3F3F;
}

.grab-form__label .label__text {
  text-indent: 5px;
  display: inline-block;
  color: #B8B8B8;
  font-weight: 500;
  margin-bottom: 3px;
}

input[type=date] {
  position: relative;
  z-index: 1;
}

input[type=date]::after {
  content: "";
  position: absolute;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  width: 15px;
  height: 15px;
  background: url(../img/galka-down.svg) center no-repeat;
  background-size: contain;
  z-index: -1;
}

input[type=date]::-webkit-calendar-picker-indicator {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: auto;
  height: auto;
  color: transparent;
  background: transparent;
  cursor: pointer;
}

input[type=date]::-webkit-inner-spin-button,
input[type=date]::-webkit-clear-button {
  z-index: 1;
}

.grab-form-grid {
  display: grid;
  grid-template-columns: repeat(4, auto);
  justify-content: space-between;
  align-items: center;
  min-height: 150px;
  padding: 35px 30px;
  background: #FFFFFF;
  box-shadow: 0px 4px 50px rgba(0, 0, 0, 0.07);
  border-radius: 19px;
  font-family: "Montserrat";
  font-size: 16px;
}

.grab-form-grid > div {
  position: relative;
  display: flex;
  align-items: center;
  padding-right: 25px;
}

.grab-form-grid > div:not(.actions)::before {
  content: "";
  margin-right: 20px;
  width: 45px;
  height: 45px;
}

.grab-form-grid > div:not(.actions)::after {
  position: absolute;
  content: "";
  width: 6px;
  height: 78px;
  background: #DAE6F2;
  border-radius: 5px;
  right: 0;
}

.grab-form-grid .doctor::before {
  background: url("../img/icon-therapy-min2.svg") center/contain no-repeat;
}

.grab-form-grid .date::before {
  background: url("../img/icon-calendar2-min2.svg") center/contain no-repeat;
}

.grab-form-grid .phone::before {
  background: url("../img/icon-user-min2.svg") center/contain no-repeat;
}

.grab-form-grid .actions {
  display: block;
  padding: 0;
}

.grab-form-grid .btn-fill {
  min-width: 200px;
  font-size: 16px;
}

.grab-form-grid__label::before {
  margin-right: 20px;
}

.grab-form-grid__label select,
.grab-form-grid__label input {
  display: block;
  border: none;
  outline: none;
  font-weight: 500;
  color: #3F3F3F;
  background: none;
  width: 100%;
  cursor: pointer;
}

.grab-form-grid__label input::-webkit-input-placeholder {
  font-weight: 500;
  color: #3F3F3F;
}

.grab-form-grid__label input:-ms-input-placeholder {
  font-weight: 500;
  color: #3F3F3F;
}

.grab-form-grid__label input::placeholder {
  font-weight: 500;
  color: #3F3F3F;
}

.grab-form-grid__label--doc select {
  width: 200px;
}

.grab-form-grid__label--date {
  position: relative;
}

.grab-form-grid__label--date input {
  width: 165px;
}

.grab-form-grid__label--phone input {
  width: 130px;
  border-bottom: 1px solid transparent;
  transition: border-bottom 0.3s;
}

.grab-form-grid__label--phone input:focus {
  border-bottom-color: #3F3F3F;
}

.grab-form-grid__label .label__text {
  text-indent: 5px;
  display: inline-block;
  color: #B8B8B8;
  font-weight: 500;
  margin-bottom: 3px;
}

.switch {
  position: relative;
  display: flex;
  align-items: center;
  text-align: center;
  font-size: 12px;
  font-weight: 600;
  text-transform: uppercase;
  color: white;
  max-width: 350px;
  height: 62px;
  background: #1E90FF;
  border-radius: 50px;
  margin-bottom: 40px;
}

.switch__bg {
  position: absolute;
  height: 100%;
  width: 50%;
  border: 5px solid #1E90FF;
  border-radius: inherit;
  background: #fff;
  left: 0;
  transition: left 0.3s;
}

.switch__content {
  position: relative;
  flex-basis: 50%;
  z-index: 10;
  transition: color 0.3s;
}

.switch__content--active {
  color: #3F3F3F;
}

.switch__content-text {
  padding: 10px;
  cursor: pointer;
}

.page-menu {
  border-top: 2px solid #e4e4e4;
  text-transform: uppercase;
  font-family: "Montserrat";
  font-weight: 500;
  padding: 20px 0;
}

.menu-list {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.menu__item {
  position: relative;
}

.menu__link {
  position: relative;
  display: flex;
  padding: 15px 0;
  transition: color 0.3s ease-in-out;
}

.menu__link:after {
  display: block;
  content: "";
  background-color: #1375F8;
  height: 3px;
  width: 0%;
  top: 100%;
  left: 50%;
  border-radius: 5px;
  position: absolute;
  -webkit-transition: width 0.3s ease-in-out;
  -moz--transition: width 0.3s ease-in-out;
  transition: width 0.3s ease-in-out;
  -webkit-transform: translateX(-50%);
  transform: translateX(-50%);
}

.menu__link:hover:after,
.menu__link:focus:after,
.menu__link.active:after {
  width: 100%;
}

.menu__link:hover {
  color: #1375F8;
}

footer .menu__link:after {
  display: block;
  content: "";
  background-color: #fff;
  height: 3px;
  width: 0%;
  top: 100%;
  left: 50%;
  border-radius: 5px;
  position: absolute;
  -webkit-transition: width 0.3s ease-in-out;
  -moz--transition: width 0.3s ease-in-out;
  transition: width 0.3s ease-in-out;
  -webkit-transform: translateX(-50%);
  transform: translateX(-50%);
}

footer .menu__link:hover:after,
footer .menu__link:focus:after,
footer .menu__link.active:after {
  width: 100%;
}

footer .menu__link:hover {
  color: #fff;
}

.menu__item--has-children .pseudo-icon {
  background: url("../img/triangle-small.svg") center no-repeat;
  width: 30px;
  height: 15px;
  cursor: pointer;
  display: block;
  transition: -webkit-transform 0.5s;
  transition: transform 0.5s;
  transition: transform 0.5s, -webkit-transform 0.5s;
}

.menu__item--has-children:hover > .sub-menu {
  display: block;
}

.sub-menu {
  position: absolute;
  display: none;
  background: #fff;
  width: -webkit-max-content;
  width: max-content;
  top: 100%;
  left: 0;
  z-index: 10;
  box-shadow: 0px 4px 50px rgba(0, 0, 0, 0.07);
}

.sub-menu .menu__item {
  margin-left: 0;
  padding: 0 40px;
}

.sub-menu .menu__item:last-child a {
  border-bottom-color: transparent;
}

.sub-menu .sub-menu {
  top: 0;
  left: 100%;
  background: #ccc;
}

.page-header {
  position: relative;
}

.top-line {
  height: 40px;
  background: #EBEBEB;
  font-family: "Montserrat";
  font-size: 14px;
  font-weight: 500;
  color: #1F2F70;
}

.top-line .row {
  justify-content: space-between;
  align-items: center;
  min-height: 40px;
}

.top-line span::before {
  margin-right: 10px;
  position: relative;
  top: 3px;
}

.top-line .town::before {
  content: url("../img/icon-location.svg");
}

.top-line .working::before {
  content: url("../img/icon-clock.svg");
}

.top-line .phone {
  color: #1F2F70;
}

.top-line .phone::before {
  content: url("../img/icon-phone-min.svg");
}

.link {
  width: 100px;
  height: 50px;
  background-color: #000;
  display: block;
  -webkit-mask-image: url("../img/psychotherapy.svg");
          mask-image: url("../img/psychotherapy.svg");
}

.middle-line .middle-line-mobile-actions {
  display: none;
  order: 2;
}

.middle-line .middle-line-mobile-actions img {
  height: 22px;
}

.middle-line .middle-line-mobile-actions .icon-planshet {
  display: none;
}

.middle-line .middle-line-mobile-actions div + div {
  margin-left: 25px;
}

.middle-line .row {
  justify-content: space-between;
  align-items: center;
  min-height: 110px;
}

.middle-line .btn {
  min-width: 210px;
  min-height: 40px;
  font-size: 16px;
  background: none;
}

.middle-line .btn span::before {
  content: url("../img/icon-calendar.svg");
  position: relative;
  top: 2px;
  margin-right: 10px;
}

.middle-line .btn:hover {
  background: #1E90FF;
}

.middle-line .btn:hover span::before {
  content: url("../img/icon-calendar-white.svg");
}

.icon-menu-burger {
  width: 30px;
  height: 22px;
  position: relative;
}

.icon-menu-burger span,
.icon-menu-burger span::before,
.icon-menu-burger span::after {
  position: absolute;
  display: block;
  height: 3px;
  background: #1F2F70;
  border-radius: 50px;
  width: 100%;
}

.icon-menu-burger span {
  top: 10px;
  transition: background-color 0.1s 0.3s;
}

.icon-menu-burger span::before,
.icon-menu-burger span::after {
  content: "";
  width: 100%;
  left: 0;
}

.icon-menu-burger span::before {
  top: -9px;
  -webkit-transform: rotate(0deg);
          transform: rotate(0deg);
  transition: top 0.3s 0.3s, -webkit-transform 0.3s;
  transition: transform 0.3s, top 0.3s 0.3s;
  transition: transform 0.3s, top 0.3s 0.3s, -webkit-transform 0.3s;
}

.icon-menu-burger span::after {
  top: 9px;
  -webkit-transform: rotate(0deg);
          transform: rotate(0deg);
  transition: top 0.3s 0.3s, -webkit-transform 0.3s;
  transition: transform 0.3s, top 0.3s 0.3s;
  transition: transform 0.3s, top 0.3s 0.3s, -webkit-transform 0.3s;
}

.icon-menu-burger.active span {
  background-color: transparent;
  transition: background-color 0.1s 0.3s;
}

.icon-menu-burger.active span::before,
.icon-menu-burger.active span::after {
  top: 0;
  transition: top 0.3s, -webkit-transform 0.3s 0.3s;
  transition: top 0.3s, transform 0.3s 0.3s;
  transition: top 0.3s, transform 0.3s 0.3s, -webkit-transform 0.3s 0.3s;
}

.icon-menu-burger.active span::before {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
}

.icon-menu-burger.active span::after {
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg);
}

.main-first-screen {
  position: relative;
  background: url("../img/main-fs-bg.png") no-repeat center bottom, linear-gradient(90deg, #FDFBFB 0%, #EBEDEE 100%);
  min-height: 630px;
  padding-top: 145px;
}

.main-first-screen h1 {
  margin-top: 0;
  line-height: 1.25;
  margin-bottom: 45px;
}

.main-first-screen h1 .modify {
  color: #1E90FF;
}

.actions {
  display: flex;
}

.actions-first-screen .btn {
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 500;
}

.actions-first-screen .btn + .btn {
  margin-left: 25px;
}

.actions-first-screen .btn-outline {
  background: none;
}

.actions-first-screen .btn-outline:hover {
  background: #1E90FF;
}

.container-grab-form {
  position: relative;
  max-width: 1170px;
  margin-top: -40px;
  margin-bottom: 120px;
  padding: 0;
}

.medical-directions {
  padding: 0 0 70px;
}

.medical-directions-heading {
  position: relative;
}

.medical-directions-heading::before {
  position: absolute;
  z-index: -1;
  left: 0;
  top: -32px;
}

.directions {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-gap: 30px 15px;
}

.directions:not(.directions--active) {
  display: none;
}

.direction-card {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  justify-content: center;
  text-align: center;
  background-color: #fff;
  background-size: 41%;
  border-radius: 40px;
  box-shadow: 0px 4px 25px rgba(0, 0, 0, 0.2);
  transition: background-color 0.3s ease;
  padding: 30px 15px;
  height: 245px;
  cursor: pointer;
  overflow: hidden;
}

.direction-card:hover {
  background: #1E90FF;
}

.direction-card:hover a {
  color: #fff;
}

.direction-card:hover img {
  -webkit-filter: brightness(0) grayscale(0) invert(1);
          filter: brightness(0) grayscale(0) invert(1);
}

.direction-card a {
  font-weight: 700;
  flex-basis: 100%;
  margin-bottom: 15px;
}

.direction__img-box {
  align-self: center;
}

.direction__img-box img {
  display: inline-block;
}

.our-center {
  padding: 70px 0;
}

.our-center h2 {
  margin-top: 0;
}

.swiper-tabs {
  margin-bottom: 85px;
}

.swiper-tabs .swiper-slide {
  width: calc(33.3333333333% - 20px);
}

.tabs {
  justify-content: space-between;
}

.tabs__link {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 5px;
  min-height: 75px;
  background: #f8f8f8;
  color: #3F3F3F;
  font-size: 22px;
  font-weight: 700;
  border: 2px solid #f8f8f8;
  border-radius: 20px;
}

.tabs__link--active,
.tabs__link:hover {
  background: #fff;
  border: 2px solid #1E90FF;
  color: #1E90FF;
}

.tab-content {
  display: none;
  --animate-duration: 1.5s;
}

.tab-content--active {
  display: flex;
}

.tab-content__img-box {
  width: calc(100% / 12 * 4 - 30px);
}

.tab-content__info {
  width: calc(100% / 12 * 8 - 30px);
  padding-top: 55px;
  padding-left: 66px;
}

.tab-content__title {
  margin-bottom: 30px;
}

.tab-content__title .modify {
  color: #1E90FF;
}

.tab-content__descript {
  font-size: 20px;
  line-height: 1.68;
  margin-bottom: 25px;
}

.tab-content__descript .modify {
  color: #1E90FF;
  font-weight: 600;
}

.tab-content__descript.screening-info {
  padding-right: 20px;
}

.tab-content__descript.screening-consult {
  padding-right: 45px;
}

.tab-content__advantages {
  text-transform: uppercase;
}

.tab-content__advantages .tab-content__advantage {
  display: inline-block;
}

.tab-content__advantages .tab-content__advantage + .tab-content__advantage {
  margin-left: 40px;
}

.tab-content__advantages .title {
  font-size: 27px;
  color: #1F2F70;
  line-height: 2.06;
  font-weight: 600;
  display: block;
}

.tab-content__advantages .descript {
  font-size: 16px;
}

.multidisciplinary {
  padding: 70px 0 140px;
}

.multidisciplinary .modify {
  color: #1E90FF;
}

.multidisciplinary .img {
  width: calc(100% / 12 * 5 - 30px);
}

.multidisciplinary .medcenter-mobile {
  margin: auto;
  display: none;
}

.multidisciplinary .desc {
  font-size: 18px;
  line-height: 168%;
  width: calc(100% / 12 * 7 - 30px);
}

.multidisciplinary .descript {
  margin-bottom: 35px;
}

.news {
  margin-bottom: 70px;
}

.swiper-news {
  width: 83.3333333333%;
}

.swiper-flex {
  position: relative;
}

.swiper-slide {
  height: auto;
}

.swiper-actions {
  display: flex;
}

.swiper-btn {
  position: absolute;
  display: inline-block;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  cursor: pointer;
  transition: -webkit-filter 0.3s;
  transition: filter 0.3s;
  transition: filter 0.3s, -webkit-filter 0.3s;
}

.swiper-btn-prev {
  left: 0;
}

.swiper-btn-next {
  right: 0;
}

.swiper-btn-next img {
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.swiper-button-disabled {
  -webkit-filter: grayscale(1) brightness(1.8);
          filter: grayscale(1) brightness(1.8);
}

.swiper-button-disabled:hover {
  -webkit-filter: grayscale(1) brightness(1.8);
          filter: grayscale(1) brightness(1.8);
}

.news-item {
  display: flex;
  flex-wrap: wrap;
  padding-bottom: 20px;
  height: 100%;
}

.news-item__img {
  margin-bottom: 15px;
}

.news-item__title {
  font-weight: 600;
  font-size: 24px;
  margin-bottom: 15px;
}

.news-item__content {
  font-weight: 300;
  font-size: 15px;
}

.news-item__action {
  margin-top: auto;
  min-width: 125px;
  min-height: 30px;
  border-radius: 5px;
  font-size: 13px;
}

.swiper-pagination {
  position: relative;
  margin-top: 25px;
  text-align: center;
}

.swiper-pagination-bullet {
  display: inline-block;
  border-radius: 50px;
  width: 15px;
  height: 15px;
  background-color: #f2f2f2;
  opacity: 1;
  transition: background-color 0.3s;
}

.swiper-pagination-bullet + .swiper-pagination-bullet {
  margin-left: 10px;
}

.swiper-pagination-bullet-active {
  background: #1375F8;
}

.container-grab-form-bf {
  margin-top: 0;
  margin-bottom: -60px;
  padding: 0;
}

.before-footer .modify {
  color: #1E90FF;
}

.grab-form-before-footer {
  position: relative;
  z-index: 10;
  min-height: 170px;
  padding: 35px 30px;
  background: #FFFFFF;
  box-shadow: 0px 4px 50px rgba(0, 0, 0, 0.07);
  border-radius: 19px;
  display: grid;
  grid-template-columns: repeat(3, 1fr) auto;
  gap: 30px;
  align-items: end;
  font-family: "Montserrat";
  font-size: 16px;
}

.grab-form-before-footer .actions {
  display: block;
}

.grab-form-before-footer .grab-form-bf__label {
  margin-bottom: 18px;
  font-size: 18px;
  font-weight: 600;
}

.grab-form-before-footer .label__text {
  margin-bottom: 18px;
}

.grab-form-before-footer input,
.grab-form-before-footer select {
  min-height: 55px;
  border: 1px solid #858585;
  border-radius: 5px;
  padding: 0 25px;
  background: transparent;
  cursor: pointer;
  width: 100%;
}

.grab-form-before-footer .grab-form-bf__select {
  -webkit-appearance: none;
          appearance: none;
}

.grab-form-before-footer .select-wrapper {
  position: relative;
}

.grab-form-before-footer .select-wrapper::after {
  z-index: 1;
  content: "";
  position: absolute;
  right: 20px;
  width: 15px;
  height: 15px;
  background: url(../img/triangle-down.svg) center no-repeat;
  background-size: contain;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  pointer-events: none;
}

.grab-form-before-footer .btn-fill {
  min-height: 55px;
}

.page-footer {
  position: relative;
  min-height: 465px;
  max-width: 1440px;
  margin: 0 auto;
  padding: 115px 0 30px;
  background: #011C43;
  background-size: 300px;
  font-family: "Montserrat";
  font-size: 14px;
  color: #fff;
}

.container-footer-info {
  margin-bottom: 50px;
}

.row-footer-info {
  justify-content: space-between;
}

.footer-logo {
  width: calc(100% / 12 * 4 - 30px);
}

.footer-info {
  padding-top: 5px;
  width: calc(100% / 12 * 4 - 30px);
}

.footer-actions {
  margin-left: auto;
  padding-top: 5px;
  width: calc(100% / 12 * 4 - 30px);
}

.med-info-list {
  margin-top: 0;
}

.med-info__item + .med-info__item {
  margin-top: 20px;
}

.med-info__item::before {
  position: relative;
  margin-right: 10px;
  top: 4px;
}

.med-info__item.location::before {
  content: url("../img/icon-location-white.svg");
}

.med-info__item.phone::before {
  content: url("../img/icon-phone-white.svg");
}

.med-info__item.mail::before {
  content: url("../img/icon-mail-white.svg");
}

.med-info__link {
  color: inherit;
}

.social-info {
  display: flex;
  align-items: center;
  margin-bottom: 30px;
}

.social-info p {
  margin: 0;
  margin-left: 15px;
  font-weight: 300;
  line-height: 1.4;
}

.feed-back {
  width: 210px;
  height: 45px;
  border: 1px solid #fff;
  border-radius: 8px;
  background: none;
  font-size: 16px;
  color: #fff;
}

.footer-menu {
  margin-bottom: 45px;
  border-top: 2px solid #616D7F;
  border-bottom: 2px solid #616D7F;
  font-size: 16px;
  font-weight: 300;
}

.footer-menu ul {
  display: flex;
  justify-content: space-between;
  min-height: 86px;
  align-items: center;
}

.footer-menu li {
  display: flex;
  align-items: center;
}

.footer-menu a {
  color: inherit;
}

.copyright {
  text-align: center;
  font-size: 12px;
  margin: 0;
}

.form-wrapper {
  max-width: 1170px;
  height: 150px;
  background: #fff;
  box-shadow: 0px 4px 50px rgba(0, 0, 0, 0.07);
  border-radius: 19px;
}

label span {
  display: block;
}

@media screen and (max-width: 1109px) {
  .container {
    max-width: 990px;
  }

  .debug-grid > div.container {
    max-width: 990px;
  }

  h2 {
    margin-bottom: 40px;
    font-size: 40px;
  }

  .grab-form {
    height: 100px;
    font-size: 14px;
  }

  .grab-form > div:not(.actions)::before {
    width: 35px;
    height: 35px;
    margin-right: 15px;
  }

  .grab-form > div:not(.actions)::after {
    height: 60px;
  }

  .grab-form .btn-fill {
    min-width: 170px;
    min-height: 40px;
    font-size: 14px;
  }

  .grab-form__label--doc select {
    width: 170px;
  }

  .grab-form__label--date input {
    width: 130px;
  }

  .grab-form__label--phone input {
    width: 115px;
  }

  .grab-form__label .label__text {
    font-size: 14px;
  }

  .grab-form-grid {
    font-size: 14px;
  }

  .grab-form-grid > div:not(.actions)::before {
    width: 35px;
    height: 35px;
    margin-right: 15px;
  }

  .grab-form-grid > div:not(.actions)::after {
    height: 60px;
  }

  .grab-form-grid .btn-fill {
    min-width: 170px;
    min-height: 40px;
    font-size: 14px;
  }

  .grab-form-grid__label--doc select {
    width: 170px;
  }

  .grab-form-grid__label--date input {
    width: 130px;
  }

  .grab-form-grid__label--phone input {
    width: 115px;
  }

  .grab-form-grid__label .label__text {
    font-size: 14px;
  }

  .switch {
    max-width: 300px;
    height: 52px;
  }

  .page-menu {
    padding: 5px 0;
  }

  .menu__link {
    font-size: 14px;
  }

  .middle-line .row {
    min-height: 85px;
  }

  .main-first-screen {
    min-height: 485px;
    padding-top: 85px;
    background: url("../img/main-fs-bg-lg.png") no-repeat center bottom, linear-gradient(90deg, #FDFBFB 0%, #EBEDEE 100%);
  }

  .main-first-screen h1 {
    font-size: 45px;
    margin-bottom: 40px;
  }

  .container-grab-form {
    max-width: 960px;
    margin-top: -10px;
  }

  .medical-directions-heading {
    margin-bottom: 55px;
  }

  .direction-card {
    height: 210px;
  }

  .direction__img-box img {
    max-width: 86%;
  }

  .our-center {
    padding: 55px 0;
  }

  .swiper-tabs {
    margin-bottom: 40px;
  }

  .tabs__link {
    min-height: 60px;
    font-size: 18px;
  }

  .tab-content__info {
    padding: 20px 0 0;
  }

  .tab-content__descript {
    margin-bottom: 15px;
    font-size: 17px;
  }

  .multidisciplinary {
    padding: 55px 0 110px;
  }

  .multidisciplinary .desc {
    font-size: 17px;
  }

  .container-grab-form-bf {
    max-width: 960px;
  }

  .grab-form-before-footer {
    gap: 10px;
  }

  .grab-form-before-footer .grab-form-bf__label {
    margin-bottom: 15px;
    font-size: 16px;
  }

  .grab-form-before-footer input,
  .grab-form-before-footer select {
    min-height: 45px;
  }

  .grab-form-before-footer .btn-fill {
    min-width: 170px;
    min-height: 45px;
  }
}

@media screen and (max-width: 991px) {
  .container {
    max-width: 768px;
  }

  .debug-grid > div.container {
    max-width: 768px;
  }

  h2 {
    margin-bottom: 40px;
    font-size: 38px;
  }

  .grab-form {
    flex-wrap: wrap;
    height: auto;
    font-size: 16px;
    gap: 30px 0;
    justify-content: center;
  }

  .grab-form > div {
    flex-basis: 40%;
  }

  .grab-form > div:not(.actions)::after {
    content: none;
  }

  .grab-form .date {
    justify-content: center;
  }

  .grab-form .actions {
    text-align: center;
  }

  .grab-form__label--doc select {
    width: 200px;
  }

  .grab-form__label--phone input {
    width: 130px;
  }

  input[type=date] {
    border: 1px solid #1E90FF;
    border-radius: 5px;
  }

  input[type=date]::after {
    content: none;
    right: 10px;
  }

  .grab-form-grid {
    grid-template-columns: repeat(2, auto);
    justify-content: space-evenly;
    gap: 30px 0;
    font-size: 16px;
  }

  .grab-form-grid > div {
    flex-basis: 40%;
  }

  .grab-form-grid > div:not(.actions)::after {
    content: none;
  }

  .grab-form-grid .date {
    justify-content: center;
  }

  .grab-form-grid__label--doc select {
    width: 200px;
  }

  .grab-form-grid__label--phone input {
    width: 130px;
  }

  .switch {
    max-width: 300px;
    height: 50px;
    margin-bottom: 35px;
  }

  .switch__bg {
    border: 4px solid #1E90FF;
  }

  .page-menu {
    position: absolute;
    overflow: auto;
    width: 100%;
    background: #fff;
    top: 100%;
    margin: 0;
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%);
    opacity: 0;
    transition: opacity 0.3s ease 0s, -webkit-transform 0.3s ease 0s;
    transition: transform 0.3s ease 0s, opacity 0.3s ease 0s;
    transition: transform 0.3s ease 0s, opacity 0.3s ease 0s, -webkit-transform 0.3s ease 0s;
    border-top: none;
    z-index: 10;
  }

  .page-menu.active {
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
    opacity: 1;
  }

  .page-menu .contact-info-mob {
    display: block;
    text-align: right;
    margin-top: 50px;
    padding: 0 10px;
  }

  .page-menu .contact-info-mob a {
    display: block;
  }

  .menu-list {
    display: block;
  }

  .menu__link {
    font-size: 14px;
    padding: 10px 0;
  }

  .menu__link:after {
    display: none;
  }

  .top-line {
    display: none;
  }

  .middle-line .logo-box {
    order: 1;
  }

  .middle-line .logo-box__link-img {
    max-height: 50px;
  }

  .middle-line .middle-line-mobile-actions {
    display: inline-flex;
  }

  .middle-line .row {
    min-height: 80px;
  }

  .main-first-screen {
    min-height: 400px;
    background: url("../img/main-fs-bg-md.png") no-repeat center bottom, linear-gradient(90deg, #FDFBFB 0%, #EBEDEE 100%);
  }

  .main-first-screen h1 {
    font-size: 30px;
  }

  .actions-first-screen .btn {
    font-size: 16px;
    min-width: 190px;
    min-height: 40px;
  }

  .container-grab-form {
    max-width: 768px;
    margin-bottom: 70px;
  }

  .medical-directions-heading {
    margin-bottom: 40px;
  }

  .directions {
    grid-template-columns: repeat(4, 1fr);
  }

  .direction-card {
    height: 195px;
    font-size: 14px;
  }

  .direction__img-box img {
    max-width: 73%;
  }

  .our-center {
    padding: 45px 0;
  }

  .swiper-tabs {
    margin-bottom: 35px;
  }

  .tabs__link {
    min-height: 45px;
    font-size: 14px;
  }

  .tab-content__img-box {
    width: calc(100% / 12 * 5 - 30px);
  }

  .tab-content__info {
    width: calc(100% / 12 * 7 - 30px);
  }

  .tab-content__title {
    margin-bottom: 15px;
    font-size: 34px;
  }

  .tab-content__descript {
    margin-bottom: 15px;
    font-size: 16px;
  }

  .tab-content__descript.screening-info,
  .tab-content__descript.screening-consult {
    padding: 0;
  }

  .tab-content__advantages .tab-content__advantage + .tab-content__advantage {
    margin-left: 30px;
  }

  .tab-content__advantages .title {
    font-size: 22px;
  }

  .tab-content__advantages .descript {
    font-size: 14px;
  }

  .multidisciplinary {
    padding: 45px 0 90px;
  }

  .multidisciplinary .img {
    width: calc(100% / 12 * 12 - 30px);
  }

  .multidisciplinary .medcenter {
    display: none;
  }

  .multidisciplinary .medcenter-mobile {
    display: block;
  }

  .multidisciplinary .desc {
    width: calc(100% / 12 * 12 - 30px);
  }

  .multidisciplinary .desc {
    font-size: 16px;
  }

  .container-grab-form-bf {
    max-width: 768px;
    margin-bottom: -60px;
  }

  .grab-form-before-footer {
    font-size: 16px;
    gap: 30px;
    justify-content: center;
    grid-template-columns: repeat(2, auto);
  }

  .footer-logo {
    width: calc(100% / 12 * 6 - 30px);
  }

  .footer-info {
    width: calc(100% / 12 * 6 - 30px);
  }

  .footer-actions {
    width: calc(100% / 12 * 12 - 30px);
  }

  .feed-back {
    width: 170px;
    height: 35px;
    font-size: 14px;
  }

  .footer-menu {
    display: none;
  }
}

@media screen and (max-width: 767px) {
  .container {
    max-width: 576px;
  }

  button.grid {
    display: none;
  }

  .debug-grid > div.container {
    max-width: 576px;
  }

  h2 {
    margin-bottom: 25px;
    font-size: 33px;
  }

  .grab-form {
    box-shadow: 0px 0px 25px rgba(0, 0, 0, 0.18);
  }

  .grab-form > div {
    flex-grow: 1;
  }

  .grab-form .date {
    justify-content: right;
  }

  .grab-form .actions {
    flex-basis: auto;
  }

  .grab-form__label--date {
    flex-basis: auto;
  }

  .grab-form__label--date input {
    width: 135px;
  }

  .grab-form-grid {
    box-shadow: 0px 0px 25px rgba(0, 0, 0, 0.18);
  }

  .grab-form-grid > div {
    flex-grow: 1;
  }

  .grab-form-grid .date {
    justify-content: right;
  }

  .grab-form-grid__label--date {
    flex-basis: auto;
  }

  .grab-form-grid__label--date input {
    width: 135px;
  }

  .switch {
    max-width: 300px;
    height: 50px;
    margin-bottom: 30px;
  }

  .middle-line .logo-box__link-img {
    max-height: 35px;
  }

  .middle-line .middle-line-actions {
    display: none;
  }

  .middle-line .middle-line-mobile-actions .icon-planshet {
    display: block;
  }

  .middle-line .row {
    min-height: 60px;
  }

  .main-first-screen {
    min-height: 240px;
    padding-top: 55px;
    background: url("../img/main-fs-bg-sm.png") no-repeat center bottom, linear-gradient(90deg, #FDFBFB 0%, #EBEDEE 100%);
    background-position: calc(50% + 50px), 0;
  }

  .main-first-screen h1 {
    font-size: 24px;
    margin-bottom: 25px;
  }

  .actions-first-screen .btn {
    font-size: 14px;
    min-width: 160px;
  }

  .actions-first-screen .btn + .btn {
    margin-left: 10px;
  }

  .container-grab-form {
    margin-bottom: 65px;
  }

  .medical-directions-heading {
    margin-bottom: 25px;
  }

  .directions {
    grid-template-columns: repeat(3, calc(33.3333333333% - 10px));
  }

  .direction-card {
    height: 150px;
    font-size: 12px;
    padding: 15px 15px 18px;
  }

  .direction__img-box img {
    max-width: 63%;
  }

  .our-center {
    padding: 32px 0;
  }

  .swiper-tabs {
    margin-bottom: 30px;
  }

  .swiper-tabs .swiper-slide {
    width: auto;
  }

  .tabs__link {
    min-height: 40px;
    font-size: 14px;
  }

  .tab-content__img-box {
    width: calc(100% / 12 * 12 - 30px);
  }

  .tab-content__img-box {
    order: 2;
  }

  .tab-content__img-box img {
    max-width: 205px;
    margin: auto;
  }

  .tab-content__info {
    width: calc(100% / 12 * 12 - 30px);
  }

  .tab-content__info {
    margin-bottom: 20px;
    padding: 0;
  }

  .tab-content__title {
    margin-bottom: 20px;
    font-size: 28px;
  }

  .tab-content__descript {
    margin-bottom: 15px;
    font-size: 16px;
  }

  .tab-content__descript.screening-info {
    padding-right: 31px;
  }

  .tab-content__advantages .title {
    font-size: 20px;
  }

  .tab-content__advantages .descript {
    font-size: 13px;
  }

  .multidisciplinary {
    padding: 32px 0 65px;
  }

  .multidisciplinary .desc {
    font-size: 15px;
  }

  .multidisciplinary .descript {
    margin-bottom: 20px;
  }

  .swiper-news {
    width: 100%;
  }

  .swiper-flex {
    display: block;
  }

  .swiper-actions {
    margin-top: 15px;
    justify-content: center;
  }

  .swiper-btn {
    position: static;
    width: 40px;
    -webkit-transform: none;
            transform: none;
  }

  .swiper-btn-prev {
    margin-right: 20px;
  }

  .swiper-pagination {
    display: none;
  }

  .container-grab-form-bf {
    margin-bottom: -65px;
  }

  .grab-form-before-footer {
    box-shadow: 0px 0px 25px rgba(0, 0, 0, 0.18);
  }

  .page-footer {
    background-image: url(../img/logo-bg-large.svg);
    background-position: center right;
    background-size: 400px;
    background-repeat: no-repeat;
  }

  .row-footer-info > .col + .col {
    margin-top: 30px;
  }

  .footer-logo {
    width: calc(100% / 12 * 9 - 30px);
  }

  .footer-info {
    width: calc(100% / 12 * 6 - 30px);
  }

  .social-info {
    display: none;
  }
}

@media screen and (max-width: 767px) and (max-width: 767px) {
  .row-footer-info .col {
    width: calc(100% / 12 * 12 - 30px);
  }
}

@media screen and (max-width: 575px) {
  .container {
    padding-left: 10px;
    padding-right: 10px;
  }

  .container {
    max-width: 360px;
  }

  .row {
    margin-left: -10px;
    margin-right: -10px;
  }

  .col {
    margin-left: 10px;
    margin-right: 10px;
  }

  .debug-grid > div {
    padding-left: 10px;
    padding-right: 10px;
  }

  .debug-grid > div > div {
    margin-left: -10px;
    margin-right: -10px;
  }

  .debug-grid > div > div > div {
    margin-left: 10px;
    margin-right: 10px;
  }

  .debug-grid > div > div > div {
    width: calc(100% / 12 * 1 - 20px);
  }

  .debug-grid > div.container {
    padding-left: 10px;
    padding-right: 10px;
  }

  .debug-grid > div.container {
    max-width: 360px;
  }

  .grab-form .date {
    justify-content: left;
  }

  .grab-form .actions {
    text-align: center;
  }

  .grab-form-grid {
    grid-template-columns: repeat(1, 1fr);
  }

  .grab-form-grid .date {
    justify-content: left;
  }

  .grab-form-grid .actions {
    text-align: center;
  }

  .switch {
    max-width: 250px;
    height: 48px;
  }

  .main-menu {
    padding-left: 20px;
  }

  .middle-line .middle-line-mobile-actions div + div {
    margin-left: 15px;
  }

  .middle-line .row {
    min-height: 65px;
  }

  .main-first-screen {
    min-height: 480px;
    padding-top: 20px;
    background: url("../img/main-fs-bg-xs.png") no-repeat center bottom, linear-gradient(90deg, #FDFBFB 0%, #EBEDEE 100%);
  }

  .main-first-screen h1 {
    font-size: 30px;
    margin-bottom: 25px;
    text-align: center;
  }

  .main-first-screen h1 .modify {
    font-size: 35px;
  }

  .actions {
    flex-direction: column;
    align-items: center;
  }

  .actions-first-screen .btn {
    display: inline-flex;
    min-width: 180px;
  }

  .actions-first-screen .btn + .btn {
    margin: 15px 0 0;
  }

  .container-grab-form {
    margin-bottom: 60px;
  }

  .medical-directions {
    padding-bottom: 30px;
  }

  .medical-directions-heading {
    font-size: 33px;
  }

  .directions {
    grid-template-columns: repeat(2, 160px);
  }

  .direction-card {
    padding: 20px 15px 12px;
  }

  .direction__img-box img {
    max-width: 60%;
  }

  .our-center {
    padding: 30px 0;
  }

  .tabs__link {
    min-height: 40px;
  }

  .tab-content__img-box {
    width: calc(100% / 12 * 12 - 20px);
  }

  .tab-content__info {
    width: calc(100% / 12 * 12 - 20px);
  }

  .tab-content__descript.screening-info {
    padding-right: 0;
  }

  .tab-content__advantages .descript {
    font-size: 12px;
  }

  .multidisciplinary {
    padding-bottom: 40px;
  }

  .news {
    margin-bottom: 60px;
  }

  .news-item__img {
    width: 100%;
  }

  .container-grab-form-bf {
    margin-bottom: -60px;
  }

  .grab-form-before-footer {
    grid-template-columns: repeat(1, 1fr);
  }

  .grab-form-before-footer .actions {
    text-align: center;
  }

  .page-footer {
    background-image: none;
  }

  .footer-logo {
    width: calc(100% / 12 * 12 - 20px);
  }

  .footer-info {
    width: calc(100% / 12 * 6 - 20px);
  }

  .med-info-list {
    font-size: 14px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
